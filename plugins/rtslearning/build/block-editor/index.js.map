{"version":3,"file":"block-editor/index.js","mappings":"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","sources":["webpack://rtslearning/./src/block-editor/neon.css?078d","webpack://rtslearning/external window [\"wp\",\"blockEditor\"]","webpack://rtslearning/external window [\"wp\",\"components\"]","webpack://rtslearning/external window [\"wp\",\"data\"]","webpack://rtslearning/external window [\"wp\",\"editPost\"]","webpack://rtslearning/external window [\"wp\",\"element\"]","webpack://rtslearning/external window [\"wp\",\"i18n\"]","webpack://rtslearning/external window [\"wp\",\"plugins\"]","webpack://rtslearning/external window [\"wp\",\"richText\"]","webpack://rtslearning/./src/block-editor/neon-format.js","webpack://rtslearning/./src/block-editor/sidebar.js","webpack://rtslearning/webpack/bootstrap","webpack://rtslearning/webpack/runtime/make namespace object","webpack://rtslearning/./src/block-editor/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","import \"./neon.css\";\r\nimport { registerFormatType, toggleFormat } from \"@wordpress/rich-text\";\r\nimport { RichTextToolbarButton } from \"@wordpress/block-editor\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { useSelect } from \"@wordpress/data\";\r\n\r\nregisterFormatType(\"rtslearning/neon\", {\r\n    title: __(\"Neon\", \"rtslearning\"),\r\n    tagName: \"span\",\r\n    className: \"neon\",\r\n    edit({ isActive, onChange, value }) {\r\n        const selectedBlock = useSelect(select => select('core/block-editor').getSelectedBlock());\r\n\r\n        return (\r\n        <>\r\n            {selectedBlock?.name === \"core/paragraph\"  && (\r\n                <RichTextToolbarButton \r\n                title={__(\"neon\", \"rtslearning\")}\r\n                icon=\"superhero\"\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    onChange(toggleFormat(value, {\r\n                        type: \"rtslearning/neon\",\r\n                    })\r\n                    );\r\n                }}\r\n            />\r\n            )}\r\n        </>\r\n      );\r\n    },\r\n});","import { registerPlugin } from \"@wordpress/plugins\";\r\nimport { PluginSidebar } from \"@wordpress/edit-post\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { useSelect, useDispatch } from \"@wordpress/data\";\r\nimport { \r\n    PanelBody, \r\n    TextControl, \r\n    TextareaControl, \r\n    ToggleControl,\r\n    Button,\r\n} from \"@wordpress/components\";\r\nimport { MediaUpload, MediaUploadCheck } from \"@wordpress/block-editor\";\r\n\r\nregisterPlugin(\"up-sidebar\", {\r\n    render() {\r\n        const { og_title, og_image, og_description, og_override_image } = useSelect(\r\n            (select) => {\r\n            return select('core/editor').getEditedPostAttribute(\"meta\");\r\n        });\r\n\r\n        const { editPost } =useDispatch(\"core/editor\");\r\n\r\n        return <PluginSidebar name=\"up_sidebar\" icon=\"share\" title={__(\"RTS learning Sidebar\", \"rtslearning\")}>\r\n            <PanelBody title={__(\"Opengraph Options\", \"rtslearning\")}>\r\n            <TextControl \r\n                label={__(\"Title\", \"rtslearning\")}\r\n                value={og_title}\r\n                onChange={og_title => {\r\n                    editPost({ \r\n                    meta: {\r\n                        og_title, \r\n                    },\r\n                })\r\n            }}\r\n            />\r\n            <TextareaControl \r\n                label={__(\"Description\", \"rtslearning\")}\r\n                value={og_description}\r\n                onChange={og_description => {\r\n                    editPost({ \r\n                        meta: {\r\n                            og_description, \r\n                        },\r\n                    })\r\n                }}\r\n            />\r\n            <ToggleControl \r\n                label={__(\"Override Featured Image\", \"rtslearning\")}\r\n                checked={og_override_image}\r\n                help={__(\r\n                \"By default, the featured image will be used as the image. Check this option to use a different image.\",\r\n                \"rtslearning\"\r\n                )}\r\n                onChange={og_override_image => {\r\n                    editPost({ \r\n                        meta: {\r\n                            og_override_image, \r\n                        },\r\n                    })\r\n                }}\r\n            />\r\n            { og_override_image && \r\n                <>\r\n                    <img src={og_image} />\r\n                    <MediaUploadCheck>\r\n                        <MediaUpload\r\n                            accept={[\"image\"]}\r\n                            render={( { open }) => {\r\n                                return <Button isPrimary onClick={open}>\r\n                                    {__(\"Change Image\", \"rtslearning\")}</Button>\r\n                            }}\r\n                            onSelect={(image) => {\r\n                                editPost({\r\n                                    meta: {\r\n                                        og_image: image.sizes.opengraph.url,\r\n                                    },\r\n                                });\r\n                            }}\r\n                        />\r\n                    </MediaUploadCheck>\r\n                </>\r\n            }\r\n            </PanelBody>\r\n        </PluginSidebar>\r\n    }\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./sidebar.js\";\r\nimport \"./neon-format.js\";"],"names":["registerFormatType","toggleFormat","RichTextToolbarButton","__","useSelect","title","tagName","className","edit","isActive","onChange","value","selectedBlock","select","getSelectedBlock","name","type","registerPlugin","PluginSidebar","useDispatch","PanelBody","TextControl","TextareaControl","ToggleControl","Button","MediaUpload","MediaUploadCheck","render","og_title","og_image","og_description","og_override_image","getEditedPostAttribute","editPost","meta","open","image","sizes","opengraph","url"],"sourceRoot":""}